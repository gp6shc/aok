<?php/** * Handles miscelanious user functions *//** * Get user avatar. Avatars are displayed in this order: * 1. user uploaded file * 2. facebook (if user logged in using FB) * 3. twitter (if user logged in using twitter) * 4. wordpress "get avatar" function (gravatar) * * @param int $userID * @param int $size * @return string */function get_user_avatar($userID, $size=40, $email=null) {    if(empty($userID)) {        return get_avatar($email, $size, 'wavatar');    }	$userdata = get_userdata($userID);	$usermeta = get_user_meta($userID);		if(!empty($usermeta['avatar'])) {	    return '<img src="'.get_bloginfo('url').'/wp-content/uploads/avatars/'.$usermeta['avatar'][0].'" width="'.$size.'" height="'.$size.'" alt="author" class="avatar">';	}	elseif (!empty($usermeta['facebookuserimg'])) {	    // facebook image is saved as <fb:image>	    //return $usermeta['facebookuserimg'][0];	    return '<img src="'.$usermeta['facebookuserimg'][0].'" width="'.$size.'" height="'.$size.'" alt="author" class="avatar">';	}	elseif (!empty($usermeta['twitteruserimg'])) {	    return '<img src="'.$usermeta['twitteruserimg'][0].'" width="'.$size.'" height="'.$size.'" alt="author" class="avatar">';	}	else {	    return get_avatar($userdata->user_email, $size, 'wavatar');	}}/** * Profile page: function to convert date to "readable" time (XX days ago etc) * @param int $timestamp * @param int $num_times * @return string */function readable_time($timestamp, $num_times = 2) {     //this returns human readable time when it was uploaded (array in seconds)    $times = array(31536000 => 'year', 2592000 => 'month',  604800 => 'week', 86400 => 'day', 3600 => 'hour', 60 => 'minute', 1 => 'second');    $now = time();    $secs = $now - $timestamp;    $count = 0;    $time = '';    foreach ($times AS $key => $value)    {        if ($secs >= $key)        {            //time found            $s = '';            $time .= floor($secs / $key);            if ((floor($secs / $key) != 1))                $s = 's';            $time .= ' ' . $value . $s;            $count++;            $secs = $secs % $key;                       if ($count > $num_times - 1 || $secs == 0)                break;            else                $time .= ', ';        }    }    return $time;}/** * Returns link to user profile page * * @param string $user_login * @return string */function get_link_to_profile($user_login) {    global $wpdb;    return get_bloginfo('url').'/?p='.get_option('viewprofile_page_id').'&profile='.($user_login);}