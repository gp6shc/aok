<?php/** * User point system *//** * Create "user_points" table if it doesn't exist yet * */function points_init() {    global $wpdb, $table_prefix;    if(get_option('points_table_created') != '1') {        $table_name = $table_prefix.'user_points';        $wpdb->query(            "CREATE TABLE IF NOT EXISTS ".$table_name." (                `id` int(9) NOT NULL PRIMARY KEY AUTO_INCREMENT,                `user_id` int(9) NOT NULL,                `points` int(9) NOT NULL DEFAULT '0',                unique user_id(user_id)            );            "        );        update_option('points_table_created', '1');    }}/** * Adds the amount of points defined in theme options when user posts an answer or his answer is selected as "best" * * @param int $commentID * @param string $action */function add_user_points($commentID, $action="add_comment") {    global $wpdb, $table_prefix;        $currentTheme = wp_get_theme();    $themeName = str_replace(' ', '_', strtolower($currentTheme->Name));    $opt = wp_load_alloptions();        $up_opt = unserialize($opt['up_themes_'.$themeName]);         switch ($action) {        case 'add_comment':        default:            $points = $up_opt['points_per_answer'];            break;        case 'bestanswer':            $points = $up_opt['points_per_best_answer'];            break;    }    $comment_data = get_comment($commentID);    if(empty($comment_data)) return;        $table_name = $table_prefix.'user_points';    $wpdb->query('INSERT into '.$table_name.' (user_id, points) VALUES ("'.$comment_data->user_id.'", "'.$points.'") ON DUPLICATE KEY UPDATE points=points+'.$points);    }/** * Substracts the amount of points defined in theme options, when user posts a question * * @param int $postID */function substract_user_points($postID) {    global $wpdb, $table_prefix;        // Setting "best answer" requires wp_update_post to be called, which triggers wp_insert_post action.    // Don't substract any points in this case    if(!empty($_GET['bestanswer'])) {                return $postID;    }    // coming from wp-admin pannel    if(empty($_POST['ask_a_question']) && empty($_POST['autoposting_site'])) {        return $postID;    }    /*    $points = (int)$_POST['up'];        // weird bug - up options is empty when calling from admin interface    if(empty($points) && isset($_POST['points_per_question'])) {                $points = $_POST['points_per_question'];    }            */    $currentTheme = wp_get_theme();    $themeName = str_replace(' ', '_', strtolower($currentTheme->Name));    $opt = wp_load_alloptions();        $up_opt = unserialize($opt['up_themes_'.$themeName]);     $points = $up_opt['points_per_question'];        $post = get_post($postID);    $table_name = $table_prefix.'user_points';    $sql = 'INSERT into '.$table_name.' (user_id, points) VALUES ("'.$post->post_author.'", "'.$points.'") ON DUPLICATE KEY UPDATE points=points-'.($points*(-1));    $wpdb->query($sql);    return $postID;}/** * Additional user points for best answer * * @param int $commentID * @return void */function add_user_points_bestanswer($commentID) {    return add_user_points($commentID, 'bestanswer');}/** * Sets comment as "best answer". * Called via AJAX  * * @param int $commentID */function set_best_answer($commentID) {    global $wpdb, $table_prefix;        $comment_data = get_comment($commentID);    if(empty($comment_data)) exit;        $check = get_post_meta($comment_data->comment_post_ID, '_bestanswer');    if(!empty($check)) exit;        update_post_meta($comment_data->comment_post_ID, '_bestanswer', $commentID);    $post = array('ID' => $comment_data->comment_post_ID, 'comment_status' => 'closed');    wp_update_post($post);        add_user_points_bestanswer($commentID);    header("content-type: text/json");    echo json_encode(array('updated' => '1'));    exit;}function bestanswer_jquery_init() {    wp_enqueue_script('jquery');}function bestanswer_js_init() {    echo '    <script type="text/javascript">    jQuery(document).ready(function() {         jQuery("a.bestanswer").click(function(e) {            e.preventDefault;            var commentID = jQuery(this).attr("commentid");            var action = "bestanswer";                        jQuery.get("'.get_bloginfo('url').'/?"+action+"="+commentID, function(data) {                if(data.updated) {                    jQuery("#comment-"+commentID).addClass("best-answer");                }            });            return false;        });    });    </script>    ';}add_action('init', 'points_init');add_action('wp_insert_comment', 'add_user_points');add_action('wp_insert_post','substract_user_points');add_action('wp_enqueue_scripts', 'bestanswer_jquery_init');add_action('wp_footer', 'bestanswer_js_init');/** * Handle ajax call "select best answer" */if(isset($_GET['bestanswer']) && $_GET['bestanswer']) {    require_once(ABSPATH . 'wp-includes/pluggable.php');    $user = wp_get_current_user();        if(isset($user->ID)) {        set_best_answer((int)$_GET['bestanswer']);    }}