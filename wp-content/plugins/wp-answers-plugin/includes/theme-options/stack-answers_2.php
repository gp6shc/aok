<?php/** * Settings for StackApp API */global $wpdb, $table_prefix;$table_name = $table_prefix.'autoposting_campaigns';$categories = get_terms('question_category', array('hide_empty' => false));$cats = array();        foreach ($categories as $category) {    $cats['options'][$category->name] = $category->term_id;}$r = $wpdb->get_results("select * from wp_user_points");if (!empty($_GET['campaign']) && $_GET['campaign'] != 'new') {    echo '<a href="?page=themefurnace#/stack-answers">Return to campaign management</a><br/>';    $options = array();    $r = $wpdb->get_results("select * from ".$table_name." where id='".(int)$_GET['campaign']."'");    if(empty($r)) {        echo 'Campaign not found.';    }    else {        $result = $r[0];        // make sure we set the values from DB        $tmp = get_option('up_themes_'.UPTHEMES_SHORT_NAME);                $tmp['autoposting_campaign_name'] = $result->campaign_name;        $tmp['autoposting_search_term'] = $result->search_term;        $tmp['autoposting_site'] = $result->site;        $tmp['autoposting_interval_days'] = $result->interval_days;        $tmp['autoposting_interval_hours'] = $result->interval_hours;        $tmp['autoposting_category'] = $result->category_id;        $tmp['autoposting_post_status'] = $result->post_status;        $tmp['autoposting_campaign_enabled'] = $result->enabled;            update_option('up_themes_'.UPTHEMES_SHORT_NAME, $tmp);                    $options = array(                    array(                  "name" => "Campaign name",                "desc" => "Set autoposting campaign name",                "id" => "autoposting_campaign_name",                "type" => "text",            	"value" => $result->campaign_name,            ),                        array(                  "name" => 'Search Term',                "desc" => "Set search term",                "id" => "autoposting_search_term",                "type" => "text",            	"value" => $result->search_term,            ),                array(                  "name" => "Select site",                "desc" => "Select which Stack Exchange site to use",                "id" => "autoposting_site",                "type" => "select",    			"value" => $result->site,    			"default_text" => 'UK',    			"default_value" => 'uk',                "options" => array(                    'US' => 'us',                    'Canada' => 'ca',                    'Australia' => 'au',                    'India' => 'in',                    'Spain' => 'es',                    'Argentina' => 'ar',                    'En espanol' => 'e1',                    'Italy' => 'it',                    'Germany' => 'de',                    'France' => 'fr',                    'Singapore' => 'sg',                    )            ),                        array(                  "name" => 'Interval (days)',                "desc" => "Set how often the campaign runs (in days). You can combine both days and hours.",                "id" => "autoposting_interval_days",                "type" => "text",            	"value" => $result->interval_days,            ),                        array(                  "name" => 'Interval (hours)',                "desc" => "Set how often the campaign runs (in hours). You can combine both days and hours.",                "id" => "autoposting_interval_hours",                "type" => "text",            	"value" => $result->interval_hours,            ),                        array(                  "name" => "Category",                "desc" => "Select post category",                "id" => "autoposting_category",                "type" => "select",    			"value" => $result->category_id,    			"default_text" => 'None',    			"default_value" => '',                "options" => $cats['options'],            ),                        array(                  "name" => "Post status",                "desc" => "Select post status",                "id" => "autoposting_post_status",                "type" => "select",    			"value" => $result->post_status,    			"default_text" => 'Publish',    			"default_value" => '1',                "options" => array(                    'Pending' => '2',                    'Draft' => '3',                )            ),                        array(                  "name" => "Enabled",                "desc" => "Enable campaign?",                "id" => "autoposting_campaign_enabled",                "type" => "select",    			"value" => $result->enabled,    			"default_text" => 'Yes',    			"default_value" => '1',                "options" => array(                    'No' => '0',                )            ),        );    }}if(empty($_GET['campaign'])):echo '<a href="?page=themefurnace&campaign=new#/stack-autoposting-campaigns">Add new autoposting campaign</a><br/>';//$limit = 20;//$page = (isset($_GET['p'])) ? (int)$_GET['p'] : 0;if(isset($page) && isset($limit))$start = $page * $limit;$start = 0;// handle disable/delete buttonsif(!empty($_POST['manage_campaign'])) {    foreach ($_POST['manage_campaign'] as $id) {        if(!empty($_POST['disable_selected'])) {            $wpdb->query("update " .$table_name. " set enabled=0 where id='".(int)$id."'");        }        elseif(!empty($_POST['delete_selected'])) {            $wpdb->query("delete from " .$table_name. "  where id='".(int)$id."'");        }    }}$campaigns = $wpdb->get_results("select * from ".$table_name);echo '<ol><li><a href="http://stackapps.com/apps/oauth/register">Login to Stack Exchange and "Register Your Application"</a></li><li>Enter details for your App including URL of your answers site</li><li>Copy and paste the "Key" and "Client ID" into the box below and save</li></ol>';global $up_options;$options = array(    array(              "name" => 'StackApps Consumer Key',            "desc" => "Set StackApps Consumer Key",            "id" => "autoposting_app_id",            "type" => "text",        	"value" => !empty($up_options->autoposting_app_id)?$up_options->autoposting_app_id:'',        ),);if(!empty($campaigns)) {    echo '<h3>Campaigns</h3>';    echo '<style type="text/css">#campaigns td { padding: 2px 10px;} #th td {font-weight: bold;}</style>';    echo '<table id="campaigns">';    echo '<tr id="th"><td>&nbsp;</td><td>Name</td><td>Search term</td><td>Posting interval</td><td>Enabled</td></tr>';    foreach ($campaigns as $campaign) {        echo '<tr>';        echo '<td><input type="checkbox" name="manage_campaign[]" value="'.$campaign->id.'"></td>';        echo '<td><a href="?page=themefurnace&campaign='.$campaign->id.'#/stack-autoposting-campaigns">'.$campaign->campaign_name.'</a></td><td>'.$campaign->search_term.'</td><td>';        if(!empty($campaign->interval_days)) {            echo $campaign->interval_days.' days ';        }        if(!empty($campaign->interval_hours)) {            echo $campaign->interval_hours.' hours';        }        echo '</td>';        echo '<td>'.($campaign->enabled == '1' ? 'Yes' : 'No').'</td>';        echo '</tr>';    }    echo '<tr><td colspan="5" style="padding: 10px 0 0 0;"><input type="submit" name="delete_selected" value="Delete selected"> <input type="submit" name="disable_selected" value="Disable selected"></td></tr>';    echo '</table>';}endif;global $up_options;if (isset($up_options->autoposting_app_id))   echo '<input type="hidden" name="autoposting_stack_id" value="'.$up_options->autoposting_app_id.'">';/* ------------ Do not edit below this line ----------- *///Check if theme options setglobal $default_check;global $default_options;if(!$default_check):    foreach($options as $option):        if($option['type'] != 'image'):            $default_options[$option['id']] = $option['value'];        else:            $default_options[$option['id']] = $option['url'];        endif;    endforeach;    $update_option = get_option('up_themes_'.UPTHEMES_SHORT_NAME);    if(is_array($update_option)):        $update_option = array_merge($update_option, $default_options);        update_option('up_themes_'.UPTHEMES_SHORT_NAME, $update_option);    else:        update_option('up_themes_'.UPTHEMES_SHORT_NAME, $default_options);    endif;endif;global $up_options;$up_opt = $up_options;$up_options = array();render_options($options);$up_options = $up_opt;